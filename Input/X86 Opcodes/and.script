include "amdsyntax";

alias dest = destination;
alias src = source;

[ShortDescription = "Logical AND"]
[CanLock = true]
opcode x86 and
{
	var `24` (void dest =  AL, imm8  src);
	var `25` (void dest =  AX, imm16 src);
	var `25` (void dest = EAX, imm32 src);
	var `25` (void dest = RAX, imm32 src);
	
	// NOTE: The order matters. Specify the smallest variants first.
	[FixedReg = 4] var `80` (reg/mem8  dest, imm8  src);
	[FixedReg = 4] var `83` (reg/mem16 dest, imm8  src);
	[FixedReg = 4] var `83` (reg/mem32 dest, imm8  src);
	[FixedReg = 4] var `83` (reg/mem64 dest, imm8  src);
	[FixedReg = 4] var `81` (reg/mem16 dest, imm16 src);
	[FixedReg = 4] var `81` (reg/mem32 dest, imm32 src);
	[FixedReg = 4] var `81` (reg/mem64 dest, imm32 src);
	
	var `20` (reg/mem8  dest, reg8  src);
	var `21` (reg/mem16 dest, reg16 src);
	var `21` (reg/mem32 dest, reg32 src);
	var `21` (reg/mem64 dest, reg64 src);
	
	var `22` (reg8  dest, reg/mem8  src);
	var `23` (reg16 dest, reg/mem16 src);
	var `23` (reg32 dest, reg/mem32 src);
	var `23` (reg64 dest, reg/mem64 src);
}
